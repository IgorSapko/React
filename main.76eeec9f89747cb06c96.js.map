{"version":3,"sources":["webpack:///./components/ContactForm/ContactForm.js","webpack:///./components/Filter/Filter.js","webpack:///./components/ContactList/ContactList.js","webpack:///./App.js","webpack:///./index.js"],"names":["FormStyles","ContactFormStyles","form","LabelStyles","label","ContactForm","name","number","target","value","setState","e","preventDefault","state","newContact","id","uuidv4","props","handleCheckContact","render","this","onSubmit","handleSubmit","htmlFor","type","placeholder","onChange","handleChange","Component","propTypes","PropTypes","func","isRequired","InputStyle","FilterStyles","input","Filter","filter","string","SpanStyles","ContactListStyles","span","ButtonStyles","button","ListItemStyles","li","ContactList","handleDeleteContact","contacts","className","map","elem","key","onClick","arrayOf","shape","defaultProps","App","contactsAfterDeleting","contact","checkedContact","some","toLocaleLowerCase","toLowerCase","alert","prevState","substr","length","componentDidMount","contactsFromLocalStorage","localStorage","getItem","JSON","parse","componentDidUpdate","prevProps","setItem","stringify","handleFilterContact","ReacDom","document","getElementById"],"mappings":"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","file":"main.76eeec9f89747cb06c96.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes, { number } from 'prop-types';\r\nimport ContactFormStyles from 'styled-components';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst FormStyles = ContactFormStyles.form`\r\nborder-style: solid;\r\nborder-width: 2px\r\nborder-color: black;\r\npadding: 10px;\r\n&>*{margin-top:10px}\r\n`;\r\nconst LabelStyles = ContactFormStyles.label`\r\ndisplay:block;\r\nfont-size:18px;\r\nfont-weight: 700;\r\n\r\n`;\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    if (name) {\r\n      const newContact = {\r\n        id: uuidv4(),\r\n        name: name,\r\n        number: number,\r\n      };\r\n      this.props.handleCheckContact(newContact);\r\n      this.setState(() => {\r\n        return { name: '', number: '' };\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <FormStyles onSubmit={this.handleSubmit}>\r\n        <LabelStyles htmlFor={uuidv4()}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </LabelStyles>\r\n        <LabelStyles htmlFor={uuidv4()}>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter phone number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </LabelStyles>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </FormStyles>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleCheckContact: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterStyles from 'styled-components';\r\n\r\nconst InputStyle = FilterStyles.input`\r\n&:focus{outline-style: solid;\r\noutline-color: blue;}\r\n`;\r\n\r\nfunction Filter({ handleChange, filter }) {\r\n  return (\r\n    <InputStyle\r\n      type=\"text\"\r\n      placeholder=\"Enter Name for serch\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListStyles from 'styled-components';\r\n\r\nconst SpanStyles = ContactListStyles.span`\r\nmargin-right:6px;\r\n`;\r\nconst ButtonStyles = ContactListStyles.button`\r\ncursor:pointer;\r\n&:hover{ background: blue}\r\n`;\r\nconst ListItemStyles = ContactListStyles.li`\r\ndisplay: block;\r\n&:not(:last-child){margin-bottom:16px}\r\n`;\r\n\r\nexport default function ContactList({ handleDeleteContact, contacts }) {\r\n  return (\r\n    <ul className=\"contactList\">\r\n      {contacts.map(elem => {\r\n        return (\r\n          <ListItemStyles key={uuidv4()}>\r\n            <SpanStyles>\r\n              {elem.name} : {elem.number}\r\n            </SpanStyles>\r\n            <ButtonStyles\r\n              type=\"button\"\r\n              onClick={() => handleDeleteContact(elem.id)}\r\n            >\r\n              Delete\r\n            </ButtonStyles>\r\n          </ListItemStyles>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n\r\n  handleDeleteContact: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nContactList.defaultProps = {\r\n  contacts: [{ number: 'empty' }],\r\n};\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './components/ContactForm/ContactForm.js';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n      { id: 'id-5', name: 'Rita Simpson', number: '459-12-56' },\r\n      { id: 'id-6', name: 'Harry Kline', number: '443-89-12' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contactsFromLocalStorage = localStorage.getItem('contacts');\r\n\r\n    if (contactsFromLocalStorage) {\r\n      this.setState({ contacts: JSON.parse(contactsFromLocalStorage) });\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state !== prevState) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    };\r\n    \r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleDeleteContact = id => {\r\n    const { contacts } = this.state;\r\n\r\n    let contactsAfterDeleting = contacts.filter(contact => contact.id !== id);\r\n\r\n    this.setState(() => {\r\n      return { contacts: contactsAfterDeleting };\r\n    });\r\n  };\r\n\r\n  handleCheckContact = checkedContact => {\r\n    const { contacts } = this.state;\r\n\r\n    const isExistContact = contacts.some(\r\n      contact =>\r\n        contact.name.toLocaleLowerCase() === checkedContact.name.toLowerCase(),\r\n    );\r\n    if (isExistContact) {\r\n      alert(`${elem.name} is already in сontacts`);\r\n    } else {\r\n      this.setState(prevState => {\r\n        return { contacts: [...prevState.contacts, checkedContact] };\r\n      });\r\n    }\r\n  };\r\n\r\n  handleFilterContact = () => {\r\n    const { filter, contacts } = this.state;\r\n    if (!filter) return contacts;\r\n    return contacts.filter(elem => {\r\n      let comparePartofName = elem.name.substr(0, filter.length);\r\n      if (comparePartofName.toLowerCase() === filter.toLowerCase()) {\r\n        return elem.name;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          handleChange={this.handleChange}\r\n          handleCheckContact={this.handleCheckContact}\r\n        />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter handleChange={this.handleChange} filter={filter} />\r\n        <ContactList\r\n          contacts={this.handleFilterContact()}\r\n          handleDeleteContact={this.handleDeleteContact}\r\n        ></ContactList>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReacDom from 'react-dom';\r\nimport App from './App'\r\n\r\n\r\nReacDom.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}