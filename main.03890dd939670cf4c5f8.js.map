{"version":3,"sources":["webpack:///./components/ContactForm/ContactForm.js","webpack:///./components/Filter/Filter.js","webpack:///./components/ContactList/ContactList.js","webpack:///./App.js","webpack:///./index.js"],"names":["FormStyles","ContactFormStyles","form","LabelStyles","label","ContactForm","name","number","target","value","setState","e","preventDefault","state","newContact","id","uuidv4","props","handleCheckContact","render","this","onSubmit","handleSubmit","htmlFor","type","placeholder","onChange","handleChange","Component","propTypes","PropTypes","func","isRequired","InputStyle","FilterStyles","input","Filter","filter","string","SpanStyles","ContactListStyles","span","ButtonStyles","button","ListItemStyles","li","ContactList","handleDeleteContact","contacts","className","map","elem","key","onClick","arrayOf","shape","defaultProps","App","contactsAfterDeleting","toLowerCase","nativeEvent","path","childNodes","textContent","checkedContact","console","log","i","alert","length","push","handleUpdateContacts","newContacts","substr","contactsForContactList","handleFilterContact","ReacDom","document","getElementById"],"mappings":"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","file":"main.03890dd939670cf4c5f8.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes, { number } from 'prop-types';\r\nimport ContactFormStyles from 'styled-components';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst FormStyles = ContactFormStyles.form`\r\nborder-style: solid;\r\nborder-width: 2px\r\nborder-color: black;\r\npadding: 10px;\r\n&>*{margin-top:10px}\r\n`;\r\nconst LabelStyles = ContactFormStyles.label`\r\ndisplay:block;\r\nfont-size:18px;\r\nfont-weight: 700;\r\n\r\n`;\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    if (name) {\r\n      const newContact = {\r\n        id: uuidv4(),\r\n        name: name,\r\n        number: number,\r\n      };\r\n      this.props.handleCheckContact(newContact);\r\n      this.setState(() => {\r\n        return { name: '', number: '' };\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <FormStyles onSubmit={this.handleSubmit}>\r\n        <LabelStyles htmlFor={uuidv4()}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </LabelStyles>\r\n        <LabelStyles htmlFor={uuidv4()}>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter phone number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </LabelStyles>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </FormStyles>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleCheckContact: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterStyles from 'styled-components';\r\n\r\nconst InputStyle = FilterStyles.input`\r\n&:focus{outline-style: solid;\r\noutline-color: blue;}\r\n`;\r\n\r\nfunction Filter({ handleChange, filter }) {\r\n  return (\r\n    <InputStyle\r\n      type=\"text\"\r\n      placeholder=\"Enter Name for serch\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListStyles from 'styled-components';\r\n\r\nconst SpanStyles = ContactListStyles.span`\r\nmargin-right:6px;\r\n`;\r\nconst ButtonStyles = ContactListStyles.button`\r\ncursor:pointer;\r\n&:hover{ background: blue}\r\n`;\r\nconst ListItemStyles = ContactListStyles.li`\r\ndisplay: block;\r\n&:not(:last-child){margin-bottom:16px}\r\n`;\r\n\r\nexport default function ContactList({\r\n    handleDeleteContact,\r\n   contacts\r\n}) {\r\n  \r\n    return (\r\n      <ul className=\"contactList\">\r\n        {contacts.map(elem => {\r\n          return (\r\n            <ListItemStyles key={uuidv4()}>\r\n              <SpanStyles>\r\n                {elem.name} : {elem.number}\r\n              </SpanStyles>\r\n              <ButtonStyles type=\"button\" onClick={handleDeleteContact}>\r\n                Delete\r\n              </ButtonStyles>\r\n            </ListItemStyles>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  \r\n  \r\n  handleDeleteContact: PropTypes.func,\r\n  filter: PropTypes.string\r\n};\r\n\r\nContactList.defaultProps = {\r\n  contacts: [{ number: 'empty' }],\r\n};\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './components/ContactForm/ContactForm.js';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n      { id: 'id-5', name: 'Rita Simpson', number: '459-12-56' },\r\n      { id: 'id-6', name: 'Harry Kline', number: '443-89-12' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleDeleteContact = e => {\r\n    const { contacts } = this.state;\r\n\r\n    let contactsAfterDeleting = contacts.filter(elem => {\r\n      return (\r\n        elem.name.toLowerCase() !==\r\n        e.nativeEvent.path[1].childNodes[0].childNodes[0].textContent.toLowerCase()\r\n      );\r\n    });\r\n\r\n    this.setState(() => {\r\n      return { contacts: contactsAfterDeleting };\r\n    });\r\n  };\r\n\r\n  handleCheckContact = checkedContact => {\r\n    const { contacts, name } = this.state;\r\n    console.log('name', name);\r\n    contacts.filter((elem, i) => {\r\n      if (elem.name.toLowerCase() === checkedContact.name.toLowerCase()) {\r\n        return alert(`${elem.name} is already in сontacts`);\r\n      } else if (\r\n        elem.name.toLowerCase() !== checkedContact.name.toLowerCase() &&\r\n        i === contacts.length - 1\r\n      ) {\r\n        contacts.push(checkedContact);\r\n\r\n        this.handleUpdateContacts(contacts);\r\n      }\r\n    });\r\n  };\r\n  handleUpdateContacts = contacts => {\r\n    this.setState(() => {\r\n      return { contacts: contacts };\r\n    });\r\n  };\r\n\r\n  handleFilterContact = contacts => {\r\n    let newContacts = [];\r\n    const { filter } = this.state;\r\n    if (filter) {\r\n      contacts.map(elem => {\r\n        let comparePartofName = elem.name.substr(0, filter.length);\r\n\r\n        if (comparePartofName.toLowerCase() === filter.toLowerCase()) {\r\n          newContacts.push(elem);\r\n        }\r\n      });\r\n    }\r\n\r\n    return newContacts;\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    let newContacts = this.handleFilterContact(contacts);\r\n    let contactsForContactList;\r\n    if (filter) {\r\n      contactsForContactList = newContacts;\r\n    } else {\r\n      contactsForContactList = contacts;\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          handleChange={this.handleChange}\r\n          handleCheckContact={this.handleCheckContact}\r\n        />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter\r\n          handleChange={this.handleChange}\r\n          filter={filter}\r\n                 />\r\n        <ContactList\r\n          contacts={contactsForContactList}\r\n          handleDeleteContact={this.handleDeleteContact}\r\n        ></ContactList>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReacDom from 'react-dom';\r\nimport App from './App'\r\n\r\n\r\nReacDom.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}