{"version":3,"sources":["webpack:///./components/ContactForm/ContactForm.js","webpack:///./components/Filter/Filter.js","webpack:///./components/ContactList/ContactList.js","webpack:///./App.js","webpack:///./index.js"],"names":["FormStyles","ContactFormStyles","form","LabelStyles","label","ContactForm","name","number","target","value","setState","e","preventDefault","state","newContact","id","uuidv4","index","props","contacts","filter","elem","i","toLowerCase","alert","length","newArrayContacts","handleUpdateContacts","render","this","onSubmit","handleSubmit","htmlFor","type","placeholder","onChange","handleChange","Component","propTypes","PropTypes","func","isRequired","arrayOf","shape","string","defaultProps","InputStyle","FilterStyles","input","Filter","SpanStyles","ContactListStyles","span","ButtonStyles","button","ListItemStyles","li","ContactList","handleDeleteContact","newContacts","className","map","key","onClick","App","forEach","nativeEvent","path","childNodes","textContent","splice","substr","push","handleFilterContact","ReacDom","document","getElementById"],"mappings":"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","file":"main.e398fe8b9fb775c2464b.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes, { number } from 'prop-types';\r\nimport ContactFormStyles from 'styled-components';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst FormStyles = ContactFormStyles.form`\r\nborder-style: solid;\r\nborder-width: 2px\r\nborder-color: black;\r\npadding: 10px;\r\n&>*{margin-top:10px}\r\n`;\r\nconst LabelStyles = ContactFormStyles.label`\r\ndisplay:block;\r\nfont-size:18px;\r\nfont-weight: 700;\r\n\r\n`;\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    let index = 0;\r\n    this.props.contacts.filter((elem, i) => {\r\n      if (elem.name.toLowerCase() === newContact.name.toLowerCase()) {\r\n        this.setState(() => ({ name: '' }));\r\n        index = i;\r\n        return alert(`${elem.name} is already in сontacts`);\r\n      } else if (\r\n        i === this.props.contacts.length - 1 &&\r\n        name &&\r\n        this.props.contacts[index].name.toLowerCase() !==\r\n          newContact.name.toLowerCase()\r\n      ) {\r\n        const newArrayContacts = [...this.props.contacts, ...newContact];\r\n        this.props.handleUpdateContacts(newArrayContacts);\r\n        this.setState(() => {\r\n          return { name: '' };\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <FormStyles onSubmit={this.handleSubmit}>\r\n        <LabelStyles htmlFor={uuidv4()}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </LabelStyles>\r\n        <LabelStyles htmlFor={uuidv4()}>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter phone number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </LabelStyles>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </FormStyles>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleUpdateContacts: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nContactForm.defaultProps = {\r\n  contacts: [{ number: 'empty' }],\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FilterStyles from 'styled-components';\r\n\r\nconst InputStyle = FilterStyles.input`\r\n&:focus{outline-style: solid;\r\noutline-color: blue;}\r\n`;\r\n\r\nfunction Filter({ handleChange, filter }) {\r\n  return (\r\n    <InputStyle\r\n      type=\"text\"\r\n      placeholder=\"Enter Name for serch\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListStyles from 'styled-components';\r\n\r\nconst SpanStyles = ContactListStyles.span`\r\nmargin-right:6px;\r\n`;\r\nconst ButtonStyles = ContactListStyles.button`\r\ncursor:pointer;\r\n&:hover{ background: blue}\r\n`;\r\nconst ListItemStyles = ContactListStyles.li`\r\ndisplay: block;\r\n&:not(:last-child){margin-bottom:16px}\r\n`;\r\n\r\nexport default function ContactList({\r\n    handleDeleteContact,\r\n  newContacts,\r\n  contacts,\r\n  filter\r\n}) {\r\n  if (filter==='') {\r\n    return (\r\n      <ul className=\"contactList\">\r\n        {contacts.map(elem => {\r\n          return (\r\n            <ListItemStyles key={uuidv4()}>\r\n              <SpanStyles>\r\n                {elem.name} : {elem.number}\r\n              </SpanStyles>\r\n              <ButtonStyles type=\"button\" onClick={handleDeleteContact}>\r\n                Delete\r\n              </ButtonStyles>\r\n            </ListItemStyles>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  } else {\r\n    return (\r\n      <ul className=\"contactList\">\r\n        {newContacts.map(elem => {\r\n          return (\r\n            <ListItemStyles key={uuidv4()}>\r\n              <SpanStyles>\r\n                {elem.name} : {elem.number}\r\n              </SpanStyles>\r\n              <ButtonStyles type=\"button\" onClick={handleDeleteContact}>\r\n                Delete\r\n              </ButtonStyles>\r\n            </ListItemStyles>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  newContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  handleDeleteContact: PropTypes.func,\r\n  filter: PropTypes.string\r\n};\r\n\r\nContactList.defaultProps = {\r\n  contacts: [{ number: 'empty' }],\r\n};\r\n","import React, { Component } from 'react';\r\nimport ContactForm from './components/ContactForm/ContactForm.js';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n      { id: 'id-5', name: 'Rita Simpson', number: '459-12-56' },\r\n      { id: 'id-6', name: 'Harry Kline', number: '443-89-12' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleDeleteContact = e => {\r\n    const { contacts } = this.state;\r\n\r\n    let index;\r\n    contacts.forEach((elem, i) => {\r\n      if (\r\n        elem.name.toLowerCase() ===\r\n        e.nativeEvent.path[1].childNodes[0].childNodes[0].textContent.toLowerCase()\r\n      ) {\r\n        index = i;\r\n      }\r\n    });\r\n    contacts.splice(index, 1);\r\n    this.setState(() => {\r\n      return { contacts: contacts };\r\n    });\r\n  };\r\n\r\n  handleUpdateContacts = contacts => {\r\n    this.setState(() => {\r\n      return { contacts: contacts };\r\n    });\r\n  };\r\n\r\n  handleFilterContact = contacts => {\r\n    let newContacts = [];\r\n    const { filter } = this.state;\r\n    if (filter) {\r\n      contacts.map(elem => {\r\n        let comparePartofName = elem.name.substr(0, filter.length);\r\n\r\n        if (comparePartofName.toLowerCase() === filter.toLowerCase()) {\r\n          newContacts.push(elem);\r\n        }\r\n      });\r\n    }\r\n\r\n    return newContacts;\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    let newContacts = this.handleFilterContact(contacts);\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          handleChange={this.handleChange}\r\n          handleUpdateContacts={this.handleUpdateContacts}\r\n          contacts={contacts}\r\n        />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter\r\n          handleChange={this.handleChange}\r\n          filter={filter}\r\n          contacts={contacts}\r\n          handleDeleteContact={this.handleDeleteContact}\r\n          handleUpdateContacts={this.handleUpdateContacts}\r\n        />\r\n        <ContactList\r\n          contacts={contacts}\r\n          newContacts={newContacts}\r\n          filter={filter}\r\n          handleFilterContact={this.handleFilterContact}\r\n          handleDeleteContact={this.handleDeleteContact}\r\n        ></ContactList>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReacDom from 'react-dom';\r\nimport App from './App'\r\n\r\n\r\nReacDom.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}